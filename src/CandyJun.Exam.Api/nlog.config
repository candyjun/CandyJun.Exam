<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="info"
      internalLogFile="c:\temp\internal-nlog.txt">

  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>

  <targets>
    <target xsi:type="File" name="requestLog" fileName="App_Data\Logs\Request\${shortdate}.log"
            layout="${longdate} [request] ${event-properties:ipAddress:padding=25:fixedLength=true} ${event-properties:duration:padding=9:fixedLength=true} ${event-properties:method:padding=7:fixedLength=true} ${event-properties:statusCode:padding=3:fixedLength=true} ${event-properties:requestUrl}" />
    <target xsi:type="File" name="errorLog" fileName="App_Data\Logs\Error\${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}" />
    <target xsi:type="File" name="infoLog" fileName="App_Data\Logs\Info\${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}" />
    <target xsi:type="File" name="debugLog" fileName="App_Data\Logs\Debug\${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}" />
    <target xsi:type="File" name="otherLog" fileName="App_Data\Logs\Other\${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}" />
  </targets>

  <rules>
    <logger name="*" writeTo="requestLog">
      <filters>
        <when condition="contains('${message}','api/health')" action="IgnoreFinal" />
        <when condition="!contains('${message}','[request]')" action="Ignore" />
        <when condition="contains('${message}','[request]')" action="LogFinal" />
      </filters>
    </logger>
    <logger name="*" minlevel="Error" maxlevel="Fatal" writeTo="errorLog" final="true" />
    <logger name="Microsoft.*" maxLevel="Info" final="true" />
    <logger name="*" levels="Info"  writeTo="infoLog" final="true" />
    <logger name="*" levels="Debug" writeTo="debugLog" final="true" />
    <logger name="*" writeTo="otherLog" />
  </rules>
</nlog>
